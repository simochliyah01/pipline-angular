trigger:
  branches:
    include:
      - main  # Cette pipeline va se déclencher à chaque push sur la branche 'main'

pool:
  vmImage: 'ubuntu-latest'  # Utilise une image Ubuntu pour les builds

variables:
  tag: '$(Build.BuildId)'  # Utilise l'ID du build comme tag pour l'image Docker

stages:
- stage: Build
  displayName: 'Build Docker Image'
  jobs:
  - job: Build
    displayName: 'Build Docker Image'
    pool:
      vmImage: 'ubuntu-latest'  # Utiliser Ubuntu comme environnement de build
    steps:
    # Étape 1: Installer Node.js
    - task: UseNode@2
      inputs:
        versionSpec: '16.x'  # Utilise la version Node.js 16.x
        addToPath: true

    # Étape 2: Installer les dépendances de l'application Angular
    - script: |
        npm install
      displayName: 'Installer les dépendances'

    # Étape 3: Build l'application Angular
    - script: |
        npm run build --prod
      displayName: 'Build l\'application Angular'

    # Étape 4: Construire et pousser l'image Docker
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerHubConnection'  # Utiliser la connexion Docker que tu as créée
        repository: 'my-angular-app'  # Nom du dépôt Docker (à ajuster selon ton projet)
        command: 'buildAndPush'  # Build l'image et pousse-la vers le registre Docker
        Dockerfile: '**/Dockerfile'  # Localisation du Dockerfile dans le projet
        tags: '$(tag
